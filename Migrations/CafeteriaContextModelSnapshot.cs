// <auto-generated />
using System;
using CafeteriaUNAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeteriaSistema.Migrations
{
    [DbContext(typeof(CafeteriaContext))]
    partial class CafeteriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("CafeteriaUNAL.Models.DetalleTransaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notas")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("DetallesTransaccion");
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Ficho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaServicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaUso")
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.HasIndex("UsuarioId", "FechaServicio")
                        .IsUnique()
                        .HasFilter("[Estado] != 3");

                    b.ToTable("Fichos");
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Categoria")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsMenuDelDia")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaUltimaModificacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StockDisponible")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Categoria = 2,
                            Codigo = "ALM001",
                            Descripcion = "Sopa, plato principal, jugo y postre",
                            EsMenuDelDia = true,
                            FechaCreacion = new DateTime(2025, 6, 24, 9, 45, 0, 439, DateTimeKind.Local).AddTicks(3082),
                            Nombre = "Almuerzo Ejecutivo",
                            Precio = 12000m,
                            StockDisponible = 100,
                            StockMinimo = 20
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Categoria = 4,
                            Codigo = "BEB001",
                            Descripcion = "Bebida gaseosa en lata",
                            EsMenuDelDia = false,
                            FechaCreacion = new DateTime(2025, 6, 24, 9, 45, 0, 439, DateTimeKind.Local).AddTicks(3100),
                            Nombre = "Gaseosa 350ml",
                            Precio = 3500m,
                            StockDisponible = 50,
                            StockMinimo = 10
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Categoria = 1,
                            Codigo = "DES001",
                            Descripcion = "Café, pan, huevos y fruta",
                            EsMenuDelDia = false,
                            FechaCreacion = new DateTime(2025, 6, 24, 9, 45, 0, 439, DateTimeKind.Local).AddTicks(3103),
                            Nombre = "Desayuno Completo",
                            Precio = 8000m,
                            StockDisponible = 50,
                            StockMinimo = 10
                        });
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsSubsidiado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MontoDescuento")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("NumeroTransaccion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TipoPago")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NumeroTransaccion")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoEstudiante")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModalidadPago")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Documento")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Apellido = "Sistema",
                            Documento = "1234567890",
                            Email = "admin@unal.edu.co",
                            FechaRegistro = new DateTime(2025, 6, 24, 9, 45, 0, 439, DateTimeKind.Local).AddTicks(3205),
                            Nombre = "Admin",
                            Telefono = "3001234567",
                            TipoUsuario = 3
                        });
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.DetalleTransaccion", b =>
                {
                    b.HasOne("CafeteriaUNAL.Models.Producto", "Producto")
                        .WithMany("DetallesTransaccion")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CafeteriaUNAL.Models.Transaccion", "Transaccion")
                        .WithMany("Detalles")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Ficho", b =>
                {
                    b.HasOne("CafeteriaUNAL.Models.Usuario", "Usuario")
                        .WithMany("Fichos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Transaccion", b =>
                {
                    b.HasOne("CafeteriaUNAL.Models.Usuario", "Usuario")
                        .WithMany("Transacciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Producto", b =>
                {
                    b.Navigation("DetallesTransaccion");
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Transaccion", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("CafeteriaUNAL.Models.Usuario", b =>
                {
                    b.Navigation("Fichos");

                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
